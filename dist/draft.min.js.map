{"version":3,"sources":["draft.js"],"names":["root","factory","define","amd","exports","module","draft","this","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","_typeof","obj","name","doc","types","mixins","inherit","destination","source","addSuper","proto","_super","mixin","hasOwnProperty","proxy","setInit","arguments","access","prop","init","split","p","shift","handler","has","_access","_access2","t","get","_access3","_access4","set","val","_access5","_access6","deleteProperty","_access7","_access8","Proxy","defaults","dpi","test","document","createElement","style","width","padding","getElementsByTagName","appendChild","offsetWidth","removeChild","Float","parseFloat","regex","RegExp","exec","toLowerCase","Length","_draft$types$Float","unit","_this","getPrototypeOf","isNaN","convert","newUnit","_this2","chain","reverse","units","toString","px","pt","pc","in","ft","yd","mi","mm","cm","dm","m","km","Color","color","parseInt","repeat","red","green","blue","rgbColor","rgb","hexColor","hex","replace","event","on","evt","listener","listenersMap","getListeners","listeners","map","l","indexOf","once","off","index","lastIndexOf","splice","fire","args","response","apply","timeStamp","Date","type","defineEvent","_len","evts","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","removeEvent","events","_getEvents","_events","system","_system","_units","position","x","y","z","pos","translate","rotation","α","β","γ","rot","rotate","fill","fillColor","fillOpacity","opacity","stroke","strokeColor","strokeOpacity","strokeWidth","size","height","scale","radius","rx","_rx","ry","_ry","Element","_properties","_type","_prop","parent","String","setter","blacklist","replacer","JSON","stringify","id","properties","children","_id","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","require","Container","_draft$Element","_this3","child","elements","add","Doc","_draft$Container","_this4","newDoc","docs","Group","_draft$Container2","group","View","_draft$Element2","gcd","a","b","view","Point","_draft$Element3","point","Line","_draft$Point","_length","line","Shape","_draft$Point2","Rect","_draft$Shape","Math","floor","random","rect","Circle","_draft$Shape2","r","circle"],"mappings":"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","file":"draft.min.js","sourcesContent":["/*\n* draft.js - A lightweight library for parametric design\n* version v0.2.0\n* http://draft.D1SC0te.ch\n*\n* copyright Jordi Pakey-Rodriguez <jordi.orlando@hexa.io>\n* license MIT\n*\n* BUILT: Thu Aug 25 2016 11:06:38 GMT-0500 (CDT)\n*/\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.draft = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar draft = function draft(name) {\n  return draft.doc(name);\n};\n\n// Initialize types and mixins\ndraft.types = {};\ndraft.mixins = {};\n\n// TODO: prefer operators at beginning of lines?\n\n// These methods are adapted from Oliver Caldwell's Heir script, which he has\n// released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/Heir\n\ndraft.inherit = function inherit(destination, source, addSuper) {\n  var proto = destination.prototype = Object.create(source.prototype);\n  proto.constructor = destination;\n\n  if (addSuper || typeof addSuper === 'undefined') {\n    destination._super = source.prototype;\n  }\n};\n\ndraft.mixin = function mixin(destination, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination.prototype[key] = source[key];\n    }\n  }\n};\n\ndraft.proxy = function proxy(obj) {\n  var setInit = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n  var access = function access(target, prop, init) {\n    if (typeof prop === 'string') {\n      return access(target, prop.split('.'), init);\n    }\n\n    var p = prop.shift();\n\n    if (prop.length && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && (init || p in target)) {\n      // TODO: when init is false, setting obj['foo.bar'] will incorrectly set\n      // obj['foo'] instead\n      return access(p in target ? target[p] : target[p] = {}, prop, init);\n    }\n\n    return [target, p];\n  };\n\n  // TODO: return null if the property does not exist or was not set/deleted?\n  var handler = {\n    has: function has(target, prop) {\n      var _access = access(target, prop);\n\n      var _access2 = _slicedToArray(_access, 2);\n\n      var t = _access2[0];\n      var p = _access2[1];\n\n      return !!t[p];\n    },\n    get: function get(target, prop) {\n      var _access3 = access(target, prop);\n\n      var _access4 = _slicedToArray(_access3, 2);\n\n      var t = _access4[0];\n      var p = _access4[1];\n\n      return t[p];\n    },\n    set: function set(target, prop, val) {\n      var _access5 = access(target, prop, setInit);\n\n      var _access6 = _slicedToArray(_access5, 2);\n\n      var t = _access6[0];\n      var p = _access6[1];\n\n      t[p] = val;\n      return true;\n    },\n    deleteProperty: function deleteProperty(target, prop) {\n      var _access7 = access(target, prop);\n\n      var _access8 = _slicedToArray(_access7, 2);\n\n      var t = _access8[0];\n      var p = _access8[1];\n\n      return delete t[p];\n    }\n  };\n\n  // BACKLOG: wait for browser support for ES6 proxies\n  return typeof Proxy === 'function' ? new Proxy(obj, handler) : obj;\n};\n\n// TODO: configurable defaults\ndraft.defaults = draft.proxy({\n  get dpi() {\n    var test = document.createElement('div');\n    test.style.width = '1in';\n    test.style.padding = 0;\n    document.getElementsByTagName('body')[0].appendChild(test);\n\n    var dpi = test.offsetWidth;\n\n    document.getElementsByTagName('body')[0].removeChild(test);\n\n    // Fall back to standard 96dpi resolution\n    return dpi || 96;\n  }\n});\n\ndraft.types.Float = function () {\n  function Float(value) {\n    _classCallCheck(this, Float);\n\n    this.value = parseFloat(value);\n  }\n\n  _createClass(Float, [{\n    key: 'valueOf',\n    value: function valueOf() {\n      return this.value;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'float';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      // Matches all floating point values. Should match:\n      // 123\n      // -123.45\n      // 123e5\n      // 123.45E+5\n      return '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?';\n    }\n  }]);\n\n  return Float;\n}();\n\ndraft.types.float = function float(value) {\n  return value == undefined ? value : new draft.types.Float(value);\n};\n\nvar test = function test(val, regex) {\n  // TODO: strict match anchor (^ instead of word end)\n  regex = new RegExp(regex + '$', 'i');\n  val = regex.exec(val);\n  return val ? val[0].toLowerCase() : false;\n};\n\ndraft.types.Length = function (_draft$types$Float) {\n  _inherits(Length, _draft$types$Float);\n\n  function Length(value, unit) {\n    _classCallCheck(this, Length);\n\n    var _this = _possibleConstructorReturn(this, (Length.__proto__ || Object.getPrototypeOf(Length)).call(this, value));\n\n    value = test(value, _this.regex);\n    unit = test(unit, _this.regex);\n\n    if (!isNaN(_this.value) && (value || unit)) {\n      _this.unit = value || unit;\n      _this.convert(unit);\n    } else {\n      _this.unit = '';\n    }\n    return _this;\n  }\n\n  _createClass(Length, [{\n    key: 'convert',\n    value: function convert(newUnit) {\n      var _this2 = this;\n\n      newUnit = test(newUnit, this.regex);\n\n      if (!newUnit) {\n        return false;\n      }\n\n      var chain = function chain(unit, reverse) {\n        var units = _this2.units[unit];\n\n        _this2.value *= reverse ? units[1] : units[0];\n        _this2.value /= reverse ? units[0] : units[1];\n\n        return units[2];\n      };\n\n      var unit = this.unit;\n      while (unit !== newUnit && unit !== 'px') {\n        unit = chain(unit);\n      }\n\n      if (unit !== newUnit) {\n        unit = newUnit;\n        while (unit !== 'px') {\n          unit = chain(unit, true);\n        }\n      }\n\n      this.unit = newUnit;\n\n      return this.toString();\n    }\n  }, {\n    key: 'valueOf',\n    value: function valueOf() {\n      return new Length(this.toString(), draft.defaults.units).value;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.value + this.unit;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'length';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      return '(px|pt|pc|in|ft|yd|mi|mm|cm|dm|km|m)';\n    }\n  }, {\n    key: 'units',\n    get: function get() {\n      return {\n        px: [1, 1, 'px'],\n        pt: [1, 72, 'px'],\n        pc: [12, 1, 'pt'],\n        in: [draft.defaults.dpi, 1, 'px'],\n        ft: [12, 1, 'in'],\n        yd: [3, 1, 'ft'],\n        mi: [1760, 1, 'yd'],\n        mm: [1, 25.4, 'in'],\n        cm: [10, 1, 'mm'],\n        dm: [10, 1, 'cm'],\n        m: [10, 1, 'dm'],\n        km: [1000, 1, 'm']\n      };\n    }\n  }]);\n\n  return Length;\n}(draft.types.Float);\n\ndraft.types.length = function length(value, unit) {\n  return value == undefined ? value : new draft.types.Length(value, unit);\n};\n\ndraft.types.Color = function () {\n  function Color(color) {\n    _classCallCheck(this, Color);\n\n    color = new RegExp('^(?:' + this.regex + ')$', 'i').exec(isNaN(color) ? color : color.toString(16));\n\n    if (color !== null) {\n      this.color = color[0].toLowerCase();\n\n      for (var i = 1; i <= 3; i++) {\n        color[i] = parseInt(color[i] || parseInt(color[i + 3] || color[i + 6].repeat(2), 16), 10);\n      }\n\n      this.red = color[1];\n      this.green = color[2];\n      this.blue = color[3];\n    }\n  }\n\n  _createClass(Color, [{\n    key: 'valueOf',\n    value: function valueOf() {\n      return this.red << 16 | this.green << 8 | this.blue;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.color;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'color';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      var rgbColor = '([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])';\n      var rgb = 'rgb\\\\(' + rgbColor + ', ?' + rgbColor + ', ?' + rgbColor + '\\\\)';\n\n      var hexColor = '([0-9a-f]{2})'.repeat(3);\n      var hex = '#?(?:' + hexColor + '|' + hexColor.replace(/\\{2\\}/g, '') + ')';\n      // var hex = '#?(?:[0-9a-f]{3}){1,2}';\n\n      return rgb + '|' + hex;\n    }\n  }]);\n\n  return Color;\n}();\n\ndraft.types.color = function color(value) {\n  return value == undefined ? value : new draft.types.Color(value);\n};\n\n// These methods are adapted from Oliver Caldwell's EventEmitter library, which\n// he has released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/EventEmitter\n\n// BACKLOG: implement bubbling?\n\ndraft.mixins.event = {\n  on: function on(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n\n      if (!(listeners.map(function (l) {\n        return l.listener;\n      }).indexOf(listener) !== -1)) {\n        listeners.push((typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) === 'object' ? listener : {\n          listener: listener,\n          once: false\n        });\n      }\n    }\n\n    return this;\n  },\n  once: function once(evt, listener) {\n    return this.on(evt, {\n      listener: listener,\n      once: true\n    });\n  },\n  off: function off(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var index = listeners.map(function (l) {\n        return l.listener;\n      }).lastIndexOf(listener);\n\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n    }\n\n    return this;\n  },\n\n\n  // TODO: use rest for args (...args)\n  fire: function fire(evt, args) {\n    // Put args in an array if it isn't already one\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var i = listeners.length;\n\n      if (i > 0) {}\n\n      while (i--) {\n        var listener = listeners[i];\n        var response = listener.listener.apply({\n          target: this,\n          // TODO: Date.now() to prevent memory leaks?\n          timeStamp: Date(),\n          type: key\n        }, args);\n\n        // If the listener returns 'off' then it gets removed from the event\n        if (listener.once === true || response === 'off') {\n          this.off(evt, listener.listener);\n        }\n      }\n    }\n\n    return this;\n  },\n  defineEvent: function defineEvent() {\n    for (var _len = arguments.length, evts = Array(_len), _key = 0; _key < _len; _key++) {\n      evts[_key] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = evts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var evt = _step.value;\n\n        this.getListeners(evt);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return this;\n  },\n  removeEvent: function removeEvent(evt) {\n    var events = this._getEvents();\n\n    // Remove different things depending on the state of evt\n    if (typeof evt === 'string') {\n      // Remove all listeners for the specified event\n      delete events[evt];\n    } else if (evt instanceof RegExp) {\n      // Remove all events matching the regex.\n      for (var key in events) {\n        if (evt.test(key)) {\n          delete events[key];\n        }\n      }\n    } else {\n      // Remove all listeners in all events\n      delete this._events;\n    }\n\n    return this;\n  },\n  getListeners: function getListeners(evt, map) {\n    var events = this._getEvents();\n    var listeners = {};\n\n    // Return a concatenated array of all matching events if\n    // the selector is a regular expression.\n    if (evt instanceof RegExp) {\n      for (var key in events) {\n        if (evt.test(key)) {\n          listeners[key] = events[key];\n        }\n      }\n    } else {\n      var listener = events[evt] || (events[evt] = []);\n\n      if (map === undefined) {\n        listeners = listener;\n      } else {\n        listeners[evt] = listener;\n      }\n    }\n\n    /* if (map !== undefined) {\n      listeners = Object.keys(listeners).map(key => listeners[key]);\n    } */\n\n    return listeners;\n  },\n\n\n  /**\n   * Fetches the events object and creates one if required.\n   *\n   * @return {Object} The events storage object.\n   * @api private\n   */\n  _getEvents: function _getEvents() {\n    return this._events || (this._events = {});\n  }\n};\n\ndraft.mixins.system = {\n  // Cartesian:\n  // - page.system('cartesian')\n  // - (x, y)\n  // - x is right, y is up, z is out of the page (right-hand)\n  // - global origin (0, 0) is at bottom-left\n  //\n  // Polar:\n  // - page.system('polar')\n  // - (r, φ)\n  // - φ is counter-clockwise, with 0 pointing to the right\n  // - global pole (0, 0) is at center\n  //\n  // BACKLOG:30 remove svg coordinates?\n  // Web/SVG:\n  // - page.system('web')\n  // - (x, y)\n  // - x is right, y is down, z is out of the page (left-hand)\n  // - global origin (0, 0) is at top-left\n\n  // BACKLOG:10 switch φ for θ?\n  // BACKLOG:0 Spherical (ρ, θ, φ), Cylindrical (ρ, φ, z)\n\n  system: function system(_system) {\n    /* if (this.prop('system') != system) {\n      // BACKLOG:20 recursively convert all elements to new system?\n    } */\n    return this.prop('system', _system);\n  }\n};\n\ndraft.defaults.system = 'cartesian';\n\ndraft.mixins.units = {\n  // Get/set the element's measurement units\n\n  units: function units(_units) {\n    return this.prop('units', _units);\n  }\n};\n\ndraft.defaults.units = 'px';\n\ndraft.mixins.position = {\n  // TODO: find better way of only applying supplied values\n\n  position: function position(x, y, z) {\n    return this.prop({\n      x: draft.types.length(x),\n      y: draft.types.length(y),\n      z: draft.types.length(z)\n    });\n  },\n  pos: function pos() {\n    return this.position.apply(this, arguments);\n  },\n  translate: function translate(x, y, z) {\n    x = this.prop('x') + x || 0;\n    y = this.prop('y') + y || 0;\n    z = this.prop('z') + z || 0;\n\n    return this.position(x, y, z);\n  }\n};\n\ndraft.mixins.rotation = {\n  rotation: function rotation(α, β, γ) {\n    return this.prop({\n      α: α,\n      β: β,\n      γ: γ\n    });\n  },\n  rot: function rot() {\n    return this.rotation.apply(this, arguments);\n  },\n  rotate: function rotate(α, β, γ) {\n    α = this.prop('α') + α || 0;\n    β = this.prop('β') + β || 0;\n    γ = this.prop('γ') + γ || 0;\n\n    return this.position(α, β, γ);\n  }\n};\n\ndraft.mixins.fill = {\n  // TODO: combine color and opacity into fill()\n\n  fill: function fill(color) {\n    return this.fillColor(color);\n  },\n  fillColor: function fillColor(color) {\n    return this.prop('fill.color', draft.types.color(color));\n  },\n  fillOpacity: function fillOpacity(opacity) {\n    // TODO: move into generic function?\n    if (/^(0(\\.\\d*)?|1(\\.0*)?)$/.test(opacity)) {\n      opacity = parseFloat(opacity, 10);\n    }\n\n    return this.prop('fill.opacity', opacity);\n  }\n};\n\ndraft.defaults['fill.color'] = '#fff';\ndraft.defaults['fill.opacity'] = 1;\n\ndraft.mixins.stroke = {\n  // TODO: combine color, opacity, and width into stroke()\n\n  stroke: function stroke(color) {\n    return this.strokeColor(color);\n  },\n  strokeColor: function strokeColor(color) {\n    return this.prop('stroke.color', draft.types.color(color));\n  },\n  strokeOpacity: function strokeOpacity(opacity) {\n    // TODO: move into generic function?\n    if (/^(0(\\.\\d*)?|1(\\.0*)?)$/.test(opacity)) {\n      opacity = parseFloat(opacity, 10);\n    }\n\n    return this.prop('stroke.opacity', opacity);\n  },\n  strokeWidth: function strokeWidth(width) {\n    return this.prop('stroke.width', draft.types.length(width));\n  }\n};\n\ndraft.defaults['stroke.color'] = '#000';\ndraft.defaults['stroke.opacity'] = 1;\ndraft.defaults['stroke.width'] = 1;\n\ndraft.mixins.size = {\n  // Get/set the element's width & height\n\n  size: function size(width, height) {\n    return this.prop({\n      width: draft.types.length(width),\n      height: draft.types.length(height)\n      // depth: draft.types.length(depth)\n    });\n  },\n  scale: function scale(width, height) {\n    return this.prop({\n      width: this.prop('width') * width || undefined,\n      height: this.prop('height') * height || undefined\n      // depth: this.prop('depth') * depth || undefined\n    });\n  }\n};\n\ndraft.mixins.radius = {\n  // Get/set the element's x radius\n\n  rx: function rx(_rx) {\n    return this.prop('rx', draft.types.length(_rx));\n  },\n\n  // Get/set the element's y radius\n  ry: function ry(_ry) {\n    return this.prop('ry', draft.types.length(_ry));\n  },\n\n  // Get/set the element's radius\n  radius: function radius(rx, ry) {\n    return this.prop({\n      rx: draft.types.length(rx),\n      ry: draft.types.length(ry)\n    });\n  }\n};\n\ndraft.Element = function () {\n  function Element(name) {\n    _classCallCheck(this, Element);\n\n    // Make sure this._properties is initialized\n    this._properties = {};\n\n    // Set a name if given\n    if (name) {\n      this.prop('name', name);\n    }\n\n    // HACK:0 use this.constructor.name to get an element's type. Requires all\n    // subclasses to have a defined constructor.\n    for (var type in draft) {\n      if (this.constructor === draft[type]) {\n        this._type = type.toLowerCase();\n        break;\n      }\n    }\n    // console.log('TYPE:', type, 'NAME:', this.constructor.name);\n  }\n\n  _createClass(Element, [{\n    key: 'prop',\n    value: function prop(_prop, val) {\n      var obj = arguments.length <= 2 || arguments[2] === undefined ? this._properties : arguments[2];\n\n      if (_prop === undefined) {\n        // Act as a full properties getter if prop is undefined\n        // TODO: don't create a new object?\n        return Object(this._properties);\n      } else if (_prop === null) {\n        // BACKLOG: test deleting all properties, perhaps remove it\n        // Delete all properties if prop is null\n        this._properties = {};\n      } else if (typeof _prop === 'string') {\n        var props = draft.proxy(this._properties);\n\n        if (val === undefined) {\n          // Act as an individual property getter if val is undefined\n          // TODO: do a fuzzy-find? For example, el.prop('width') would match\n          // el._properties.size.width if el._properties.width is undefined\n          return _prop in props ? props[_prop] : null;\n        } else if (val === null) {\n          // Delete the property if val is null\n          delete props[_prop];\n        } else {\n          // Act as an individual property setter if both prop and val are defined\n\n          if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n            var unit = void 0;\n\n            switch (val.type) {\n              case 'length':\n                unit = this.parent.prop('units') || draft.defaults.units;\n                val.unit = val.unit || unit;\n                val.convert(unit);\n              // Falls through\n              case 'color':\n                val = String(val);\n                break;\n            }\n          }\n\n          props[_prop] = val;\n        }\n\n        this.fire('change', [_prop, val]);\n      } else if ((typeof _prop === 'undefined' ? 'undefined' : _typeof(_prop)) === 'object') {\n        // Act as a getter if prop is an object with only null values.\n        // Act as a setter if prop is an object with at least one non-null value.\n        var setter = false;\n\n        for (var p in _prop) {\n          // Get this._properties[p] and save it to prop[p]\n          _prop[p] = this.prop(p, _prop[p], obj);\n          // If the returned value is an object, prop[p] is non-null, so act like\n          // a setter.\n          setter = setter || _typeof(_prop[p]) == 'object';\n        }\n\n        return setter ? this : _prop;\n      }\n\n      // Chainable if 'this' is returned\n      return this;\n    }\n\n    // TODO: use rest (...blacklist)\n\n  }, {\n    key: 'stringify',\n    value: function stringify(blacklist) {\n      var replacer;\n\n      if (Array.isArray(blacklist)) {\n        replacer = function replacer(key, val) {\n          if (blacklist.indexOf(key) !== -1) {\n            return undefined;\n          }\n\n          return val;\n        };\n      } else if (blacklist instanceof RegExp) {\n        replacer = function replacer(key, val) {\n          if (blacklist.test(key)) {\n            return undefined;\n          }\n\n          return val;\n        };\n      }\n\n      return JSON.stringify(this, replacer, 2);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        type: this.type,\n        id: this.id,\n        properties: this.prop(),\n        children: this.children\n      };\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: 'id',\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this.prop('name');\n    }\n\n    // Construct a unique ID from the element's type and ID\n\n  }, {\n    key: 'domID',\n    get: function get() {\n      var id = String(this.id);\n      while (id.length < 4) {\n        id = '0' + id;\n      }\n\n      return this.type + '_' + id;\n    }\n  }], [{\n    key: 'inherit',\n    value: function inherit(source, addSuper) {\n      draft.inherit(this, source, addSuper);\n    }\n  }, {\n    key: 'mixin',\n    value: function mixin(source) {\n      draft.mixin(this, source);\n    }\n\n    // TODO:40 merge require() with mixin()?\n\n  }, {\n    key: 'require',\n    value: function require(source) {\n      if (typeof source == 'string') {\n        this.mixin(draft.mixins[source]);\n      } else if (Array.isArray(source)) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = source[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var mixin = _step2.value;\n\n            this.require(mixin);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return Element;\n}();\n\ndraft.Element.require(['event', 'position', 'rotation']);\n\ndraft.Container = function (_draft$Element) {\n  _inherits(Container, _draft$Element);\n\n  function Container(name) {\n    _classCallCheck(this, Container);\n\n    // Initialize children array\n\n    var _this3 = _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, name));\n\n    _this3.children = [];\n    return _this3;\n  }\n\n  _createClass(Container, [{\n    key: 'add',\n    value: function add(child) {\n      // Add a reference to the child's parent and containing doc\n      child.parent = this;\n      child.doc = this.doc || this;\n\n      // Add the child to its type array\n      var type = child.type;\n      (child.doc.elements[type] || (child.doc.elements[type] = [])).push(child);\n      // Set the child's id\n      child._id = child.doc.elements[type].length;\n\n      // Add the child to the end of the children array\n      this.children.push(child);\n\n      // Fire the 'add' event to all listeners\n      this.fire('add', [child]);\n\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child) {\n      this.add(child);\n      return child;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(child) {\n      this.fire('remove', [child]);\n      return this;\n    }\n  }, {\n    key: 'firstChild',\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: 'lastChild',\n    get: function get() {\n      return this.children[this.children.length - 1];\n    }\n  }]);\n\n  return Container;\n}(draft.Element);\n\ndraft.Doc = function (_draft$Container) {\n  _inherits(Doc, _draft$Container);\n\n  function Doc(name) {\n    _classCallCheck(this, Doc);\n\n    // Initialize elements container\n\n    var _this4 = _possibleConstructorReturn(this, (Doc.__proto__ || Object.getPrototypeOf(Doc)).call(this, name));\n\n    _this4.elements = {};\n\n    _this4.prop({\n      system: draft.defaults.system,\n      units: draft.defaults.units\n    });\n    return _this4;\n  }\n\n  return Doc;\n}(draft.Container);\n\ndraft.doc = function doc(name) {\n  var newDoc = new draft.Doc(name);\n\n  (draft.docs || (draft.docs = [])).push(newDoc);\n  newDoc._id = draft.docs.length;\n\n  return newDoc;\n};\n\ndraft.Group = function (_draft$Container2) {\n  _inherits(Group, _draft$Container2);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));\n  }\n\n  return Group;\n}(draft.Container);\n\ndraft.Group.require(['system', 'units']);\n\n// TODO: mixin to draft.Group?\ndraft.Container.mixin({\n  group: function group(name) {\n    return this.push(new draft.Group(name)).prop({\n      system: this.prop('system'),\n      units: this.prop('units')\n    });\n  }\n});\n\ndraft.View = function (_draft$Element2) {\n  _inherits(View, _draft$Element2);\n\n  function View() {\n    _classCallCheck(this, View);\n\n    return _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).apply(this, arguments));\n  }\n\n  _createClass(View, [{\n    key: 'aspectRatio',\n\n    /* render(renderer) {\n      this['render' + renderer.toUpperCase()]();\n    } */\n\n    get: function get() {\n      var width = draft.types.length(this.prop('width')).value;\n      var height = draft.types.length(this.prop('height')).value;\n\n      var gcd = function gcd(a, b) {\n        return b ? gcd(b, a % b) : a;\n      };\n\n      gcd = gcd(width, height);\n      return width / gcd + ':' + height / gcd;\n    }\n  }]);\n\n  return View;\n}(draft.Element);\n\ndraft.View.require('size');\n\ndraft.Group.mixin({\n  // TODO: get group bounding box for default size\n\n  view: function view() {\n    var width = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\n    var height = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];\n\n    return this.push(new draft.View()).size(width, height);\n  }\n});\n\ndraft.Point = function (_draft$Element3) {\n  _inherits(Point, _draft$Element3);\n\n  function Point() {\n    _classCallCheck(this, Point);\n\n    return _possibleConstructorReturn(this, (Point.__proto__ || Object.getPrototypeOf(Point)).apply(this, arguments));\n  }\n\n  return Point;\n}(draft.Element);\n\ndraft.Point.require('stroke');\n\ndraft.Group.mixin({\n  point: function point() {\n    return this.push(new draft.Point());\n  }\n});\n\ndraft.Line = function (_draft$Point) {\n  _inherits(Line, _draft$Point);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).apply(this, arguments));\n  }\n\n  _createClass(Line, [{\n    key: 'length',\n    value: function length(_length) {\n      return this.prop('length', draft.types.length(_length));\n    }\n  }]);\n\n  return Line;\n}(draft.Point);\n\ndraft.Group.mixin({\n  line: function line() {\n    var length = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\n\n    return this.push(new draft.Line()).length(length);\n  }\n});\n\ndraft.Shape = function (_draft$Point2) {\n  _inherits(Shape, _draft$Point2);\n\n  function Shape() {\n    _classCallCheck(this, Shape);\n\n    return _possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));\n  }\n\n  return Shape;\n}(draft.Point);\n\ndraft.Shape.require(['fill', 'size']);\n\ndraft.Rect = function (_draft$Shape) {\n  _inherits(Rect, _draft$Shape);\n\n  function Rect() {\n    _classCallCheck(this, Rect);\n\n    return _possibleConstructorReturn(this, (Rect.__proto__ || Object.getPrototypeOf(Rect)).apply(this, arguments));\n  }\n\n  _createClass(Rect, [{\n    key: 'rekt',\n\n    // Hehehe\n    get: function get() {\n      return Math.floor(Math.random() * 101) + '% rekt';\n    }\n  }]);\n\n  return Rect;\n}(draft.Shape);\n\ndraft.Rect.require('radius');\n\ndraft.Group.mixin({\n  rect: function rect() {\n    var width = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\n    var height = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];\n\n    return this.push(new draft.Rect()).size(width, height);\n  }\n});\n\ndraft.Circle = function (_draft$Shape2) {\n  _inherits(Circle, _draft$Shape2);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).apply(this, arguments));\n  }\n\n  _createClass(Circle, [{\n    key: 'radius',\n    value: function radius(r) {\n      return this.prop('r', draft.types.length(r));\n    }\n  }]);\n\n  return Circle;\n}(draft.Shape);\n\ndraft.Group.mixin({\n  circle: function circle() {\n    var r = arguments.length <= 0 || arguments[0] === undefined ? 50 : arguments[0];\n\n    return this.push(new draft.Circle()).radius(r);\n  }\n});\nreturn draft;\n}));\n"],"sourceRoot":"/source/"}