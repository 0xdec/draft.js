{"version":3,"sources":["draft.min.js","draft.js"],"names":["root","factory","define","amd","exports","module","draft","this","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_typeof","obj","Symbol","unitHack","val","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","iterator","next","done","push","err","Array","isArray","name","doc","types","mixins","inherit","destination","source","addSuper","proto","_super","mixin","hasOwnProperty","proxy","access","prop","split","p","shift","handler","get","_access","_access2","t","set","_access3","_access4","deleteProperty","_access5","_access6","Proxy","defaults","dpi","test","document","createElement","style","width","padding","getElementsByTagName","appendChild","offsetWidth","removeChild","unit","px","String","num","parseFloat","regex","units","exec","slice","lastIndex","color","hex","rgb255","rgb","RegExp","opacity","from0to1","event","on","evt","listener","listenersMap","getListeners","listeners","map","l","indexOf","once","off","index","lastIndexOf","splice","fire","args","response","apply","timeStamp","Date","type","defineEvent","_len","arguments","evts","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","removeEvent","events","_getEvents","_events","system","_system","_units","position","x","y","z","pos","translate","rotation","α","β","γ","rot","rotate","fill","fillColor","fillOpacity","stroke","strokeColor","strokeOpacity","strokeWidth","size","height","_width","_height","radius","rx","_rx","ry","_ry","Element","_properties","_type","toLowerCase","_prop","endsWith","isFinite","parent","setter","blacklist","replacer","JSON","stringify","id","properties","children","_id","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","require","Container","_draft$Element","_this","getPrototypeOf","child","elements","add","Doc","_draft$Container","_this2","newDoc","docs","Group","_draft$Container2","group","View","_draft$Element2","gcd","a","b","view","Line","_draft$Element3","_length","line","Shape","_draft$Element4","Rect","_draft$Shape","Math","floor","random","rect","Circle","_draft$Shape2","r","circle"],"mappings":"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","file":"draft.min.js","sourcesContent":[null,"/*\n* draft.js - A lightweight library for parametric design\n* version v0.1.0\n* http://draft.D1SC0te.ch\n*\n* copyright Jordi Pakey-Rodriguez <jordi.orlando@hexa.io>\n* license MIT\n*\n* BUILT: Tue Feb 02 2016 02:49:16 GMT-0600 (CST)\n*/\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.draft = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nvar draft = function draft(name) {\n  return draft.doc(name);\n};\n\n// Initialize types and mixins\ndraft.types = {};\ndraft.mixins = {};\n\n// These methods are adapted from Oliver Caldwell's Heir script, which he has\n// released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/Heir\n\ndraft.inherit = function inherit(destination, source, addSuper) {\n  var proto = destination.prototype = Object.create(source.prototype);\n  proto.constructor = destination;\n\n  if (addSuper || typeof addSuper === 'undefined') {\n    destination._super = source.prototype;\n  }\n};\n\ndraft.mixin = function mixin(destination, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination.prototype[key] = source[key];\n    }\n  }\n};\n\ndraft.proxy = function proxy(obj) {\n  var access = function access(target, prop) {\n    if (typeof prop === 'string') {\n      return access(target, prop.split('.'));\n    }\n\n    var p = prop.shift();\n\n    if (prop.length > 0) {\n      return access(target[p] || (target[p] = {}), prop);\n    }\n\n    return [target, p];\n  };\n\n  var handler = {\n    get: function get(target, prop) {\n      var _access = access(target, prop);\n\n      var _access2 = _slicedToArray(_access, 2);\n\n      var t = _access2[0];\n      var p = _access2[1];\n\n      return t[p];\n    },\n    set: function set(target, prop, val) {\n      var _access3 = access(target, prop);\n\n      var _access4 = _slicedToArray(_access3, 2);\n\n      var t = _access4[0];\n      var p = _access4[1];\n\n      t[p] = val;\n      return true;\n    },\n    deleteProperty: function deleteProperty(target, prop) {\n      var _access5 = access(target, prop);\n\n      var _access6 = _slicedToArray(_access5, 2);\n\n      var t = _access6[0];\n      var p = _access6[1];\n\n      delete t[p];\n      return true;\n    }\n  };\n\n  // BACKLOG: wait for browser support for ES6 proxies\n  return typeof Proxy === 'function' ? new Proxy(obj, handler) : obj;\n};\n\n// TODO: configurable defaults\ndraft.defaults = draft.proxy({\n  get dpi() {\n    var test = document.createElement('div');\n    test.style.width = '1in';\n    test.style.padding = 0;\n    document.getElementsByTagName('body')[0].appendChild(test);\n\n    var dpi = test.offsetWidth;\n\n    document.getElementsByTagName('body')[0].removeChild(test);\n\n    // Fall back to standard 96dpi resolution\n    return dpi || 96;\n  }\n});\n\ndraft.types.unit = function unit(val) {\n  // TODO: add real code\n  return val;\n};\n\n// TODO:50 test safety checks for draft.px()\ndraft.px = function px(val) {\n  val = String(val);\n  var num = parseFloat(val, 10);\n\n  var regex = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?/g;\n\n  /* if (typeof units == 'string') {\n    return new RegExp(`${regex.source}${units}$`, 'ig').test(val);\n  } */\n\n  // TODO: don't default to px?\n  var units = regex.exec(val) === null ? false : val.slice(regex.lastIndex) || 'px';\n\n  switch (units) {\n    // Remain unchanged if units are already px\n    case 'px':\n      return num;\n\n    // Points and picas (pt, pc)\n    case 'pc':\n      num *= 12;\n    // Falls through\n    case 'pt':\n      num /= 72;\n      break;\n\n    // Metric units (mm, cm, dm, m, km)\n    case 'km':\n      num *= 1000;\n    // Falls through\n    case 'm':\n      num *= 10;\n    // Falls through\n    case 'dm':\n      num *= 10;\n    // Falls through\n    case 'cm':\n      num *= 10;\n    // Falls through\n    case 'mm':\n      num /= 25.4;\n      break;\n\n    // Imperial units (in, ft, yd, mi)\n    case 'mi':\n      num *= 1760;\n    // Falls through\n    case 'yd':\n      num *= 3;\n    // Falls through\n    case 'ft':\n      num *= 12;\n    // Falls through\n    case 'in':\n      break;\n    default:\n      return undefined;\n  }\n\n  return num * draft.defaults.dpi;\n};\n\n// DOING:10 create an actual 'Unit' class for every unit instance\nfunction unitHack(val) {\n  return val == null ? val : val + '_u';\n}\n\ndraft.types.color = function color(val) {\n  var hex = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n\n  var rgb255 = '([01]?\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])';\n  var rgb = new RegExp('^rgb\\\\(' + rgb255 + '\\\\, ?' + rgb255 + '\\\\, ?' + rgb255 + '\\\\)$', 'i');\n\n  if (val === undefined || val === null || hex.test(val) || rgb.test(val)) {\n    return val;\n  }\n};\n\ndraft.types.opacity = function opacity(val) {\n  var from0to1 = /^(0(\\.\\d*)?|1(\\.0*)?)$/;\n\n  if (val === undefined || val === null) {\n    return val;\n  } else if (from0to1.test(val)) {\n    return parseFloat(val, 10);\n  }\n};\n\n// These methods are adapted from Oliver Caldwell's EventEmitter library, which\n// he has released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/EventEmitter\n\n// BACKLOG: implement bubbling?\n\ndraft.mixins.event = {\n  on: function on(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n\n      if (!(listeners.map(function (l) {\n        return l.listener;\n      }).indexOf(listener) !== -1)) {\n        listeners.push((typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) === 'object' ? listener : {\n          listener: listener,\n          once: false\n        });\n      }\n    }\n\n    return this;\n  },\n  once: function once(evt, listener) {\n    return this.on(evt, {\n      listener: listener,\n      once: true\n    });\n  },\n  off: function off(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var index = listeners.map(function (l) {\n        return l.listener;\n      }).lastIndexOf(listener);\n\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n    }\n\n    return this;\n  },\n\n  // TODO: use rest for args (...args)\n  fire: function fire(evt, args) {\n    // Put args in an array if it isn't already one\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var i = listeners.length;\n\n      // NOTE: fire event\n      if (i > 0) {}\n\n      while (i--) {\n        var listener = listeners[i];\n        var response = listener.listener.apply({\n          target: this,\n          // TODO: Date.now() to prevent memory leaks?\n          timeStamp: Date(),\n          type: key\n        }, args);\n\n        // If the listener returns 'off' then it gets removed from the event\n        if (listener.once === true || response === 'off') {\n          this.off(evt, listener.listener);\n        }\n      }\n    }\n\n    return this;\n  },\n  defineEvent: function defineEvent() {\n    for (var _len = arguments.length, evts = Array(_len), _key = 0; _key < _len; _key++) {\n      evts[_key] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = evts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var evt = _step.value;\n\n        this.getListeners(evt);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return this;\n  },\n  removeEvent: function removeEvent(evt) {\n    var events = this._getEvents();\n\n    // Remove different things depending on the state of evt\n    if (typeof evt === 'string') {\n      // Remove all listeners for the specified event\n      delete events[evt];\n    } else if (evt instanceof RegExp) {\n      // Remove all events matching the regex.\n      for (var key in events) {\n        if (evt.test(key)) {\n          delete events[key];\n        }\n      }\n    } else {\n      // Remove all listeners in all events\n      delete this._events;\n    }\n\n    return this;\n  },\n  getListeners: function getListeners(evt, map) {\n    var events = this._getEvents();\n    var listeners = {};\n\n    // Return a concatenated array of all matching events if\n    // the selector is a regular expression.\n    if (evt instanceof RegExp) {\n      for (var key in events) {\n        if (evt.test(key)) {\n          listeners[key] = events[key];\n        }\n      }\n    } else {\n      var listener = events[evt] || (events[evt] = []);\n\n      if (map === undefined) {\n        listeners = listener;\n      } else {\n        listeners[evt] = listener;\n      }\n    }\n\n    /* if (map !== undefined) {\n      listeners = Object.keys(listeners).map(key => listeners[key]);\n    } */\n\n    return listeners;\n  },\n\n  /**\n   * Fetches the events object and creates one if required.\n   *\n   * @return {Object} The events storage object.\n   * @api private\n   */\n  _getEvents: function _getEvents() {\n    return this._events || (this._events = {});\n  }\n};\n\ndraft.mixins.system = {\n  // Cartesian:\n  // - page.system('cartesian')\n  // - (x, y)\n  // - x is right, y is up, z is out of the page (right-hand)\n  // - global origin (0, 0) is at bottom-left\n  //\n  // Polar:\n  // - page.system('polar')\n  // - (r, φ)\n  // - φ is counter-clockwise, with 0 pointing to the right\n  // - global pole (0, 0) is at center\n  //\n  // BACKLOG:30 remove svg coordinates?\n  // Web/SVG:\n  // - page.system('web')\n  // - (x, y)\n  // - x is right, y is down, z is out of the page (left-hand)\n  // - global origin (0, 0) is at top-left\n\n  // BACKLOG:10 switch φ for θ?\n  // BACKLOG:0 Spherical (ρ, θ, φ), Cylindrical (ρ, φ, z)\n\n  system: function system(_system) {\n    /* if (this.prop('system') != system) {\n      // BACKLOG:20 recursively convert all elements to new system?\n    } */\n    return this.prop('system', _system);\n  }\n};\n\ndraft.defaults.system = 'cartesian';\n\ndraft.mixins.units = {\n  // Get/set the element's measurement units\n\n  units: function units(_units) {\n    return this.prop('units', _units);\n  }\n};\n\ndraft.defaults.units = 'px';\n\ndraft.mixins.position = {\n  // TODO: find better way of only applying supplied values\n\n  position: function position(x, y, z) {\n    return this.prop({\n      x: unitHack(x),\n      y: unitHack(y),\n      z: unitHack(z)\n    });\n  },\n  pos: function pos() {\n    return this.position.apply(this, arguments);\n  },\n  translate: function translate(x, y, z) {\n    x = this.prop('x') + x || 0;\n    y = this.prop('y') + y || 0;\n    z = this.prop('z') + z || 0;\n\n    return this.position(x, y, z);\n  }\n};\n\ndraft.mixins.rotation = {\n  rotation: function rotation(α, β, γ) {\n    return this.prop({\n      α: α,\n      β: β,\n      γ: γ\n    });\n  },\n  rot: function rot() {\n    return this.rotation.apply(this, arguments);\n  },\n  rotate: function rotate(α, β, γ) {\n    α = this.prop('α') + α || 0;\n    β = this.prop('β') + β || 0;\n    γ = this.prop('γ') + γ || 0;\n\n    return this.position(α, β, γ);\n  }\n};\n\ndraft.mixins.fill = {\n  // TODO: combine color and opacity into fill()\n\n  fill: function fill(color) {\n    return this.fillColor(color);\n  },\n  fillColor: function fillColor(color) {\n    return this.prop('fill.color', draft.types.color(color));\n  },\n  fillOpacity: function fillOpacity(opacity) {\n    return this.prop('fill.opacity', draft.types.opacity(opacity));\n  }\n};\n\ndraft.defaults['fill.color'] = '#fff';\ndraft.defaults['fill.opacity'] = 1;\n\ndraft.mixins.stroke = {\n  // TODO: combine color, opacity, and width into stroke()\n\n  stroke: function stroke(color) {\n    return this.strokeColor(color);\n  },\n  strokeColor: function strokeColor(color) {\n    return this.prop('stroke.color', draft.types.color(color));\n  },\n  strokeOpacity: function strokeOpacity(opacity) {\n    return this.prop('stroke.opacity', draft.types.opacity(opacity));\n  },\n  strokeWidth: function strokeWidth(width) {\n    return this.prop('stroke.width', draft.types.unit(width));\n  }\n};\n\ndraft.defaults['stroke.color'] = '#000';\ndraft.defaults['stroke.opacity'] = 1;\ndraft.defaults['stroke.width'] = 1;\n\ndraft.mixins.size = {\n  // Get/set the element's width & height\n\n  size: function size(width, height) {\n    return this.prop({\n      width: unitHack(width),\n      height: unitHack(height)\n    });\n  },\n\n  // Get/set the element's width\n  width: function width(_width) {\n    return draft.px(this.prop('width', unitHack(_width)));\n  },\n\n  // Get/set the element's height\n  height: function height(_height) {\n    return draft.px(this.prop('height', unitHack(_height)));\n  }\n};\n\ndraft.mixins.radius = {\n  // Get/set the element's x radius\n\n  rx: function rx(_rx) {\n    return this.prop('rx', unitHack(_rx));\n  },\n\n  // Get/set the element's y radius\n  ry: function ry(_ry) {\n    return this.prop('ry', unitHack(_ry));\n  },\n\n  // Get/set the element's radius\n  radius: function radius(rx, ry) {\n    return this.prop({\n      rx: unitHack(rx),\n      ry: unitHack(ry)\n    });\n  }\n};\n\ndraft.Element = (function () {\n  function Element(name) {\n    _classCallCheck(this, Element);\n\n    // Make sure this._properties is initialized\n    this._properties = {};\n\n    // Set a name if given\n    if (name) {\n      this.prop('name', name);\n    }\n\n    // HACK:0 use this.constructor.name to get an element's type. Requires all\n    // subclasses to have a defined constructor.\n    for (var type in draft) {\n      if (this.constructor === draft[type]) {\n        this._type = type.toLowerCase();\n        break;\n      }\n    }\n    // console.log('TYPE:', type, 'NAME:', this.constructor.name);\n  }\n\n  _createClass(Element, [{\n    key: 'prop',\n    value: function prop(_prop, val) {\n      var obj = arguments.length <= 2 || arguments[2] === undefined ? this._properties : arguments[2];\n\n      if (_prop === undefined) {\n        // Act as a full properties getter if prop is undefined\n        // TODO: don't create a new object?\n        return Object(this._properties);\n      } else if (_prop === null) {\n        // BACKLOG: test deleting all properties, perhaps remove it\n        // Delete all properties if prop is null\n        this._properties = {};\n      } else if (typeof _prop === 'string') {\n        var props = draft.proxy(this._properties);\n\n        if (val === undefined) {\n          // Act as an individual property getter if val is undefined\n\n          // HACK: don't return 0?\n          // If prop is undefined, set it to the default OR 0\n          if (props[_prop] === undefined) {\n            this.prop(_prop, draft.defaults[_prop] || 0);\n          }\n\n          return props[_prop];\n        } else if (val === null) {\n          // Delete the property if val is null\n          delete props[_prop];\n        } else {\n          // Act as an individual property setter if both prop and val are defined\n\n          // HACK:10 should use an actual unit data type, not just strings\n          if (String(val).endsWith('_u')) {\n            val = val.slice(0, -2);\n            val = isFinite(val) ? val + this.parent.prop('units') || draft.defaults.units : val;\n          }\n\n          props[_prop] = val;\n        }\n\n        this.fire('change', [_prop, val]);\n      } else if ((typeof _prop === 'undefined' ? 'undefined' : _typeof(_prop)) == 'object') {\n        // Act as a getter if prop is an object with only null values.\n        // Act as a setter if prop is an object with at least one non-null value.\n        var setter = false;\n\n        for (var p in _prop) {\n          // Get this._properties[p] and save it to prop[p]\n          _prop[p] = this.prop(p, _prop[p], obj);\n          // If the returned value is an object, prop[p] is non-null, so act like\n          // a setter.\n          setter = setter || _typeof(_prop[p]) == 'object';\n        }\n\n        return setter ? this : _prop;\n      }\n\n      // Chainable if 'this' is returned\n      return this;\n    }\n\n    // TODO: use rest (...blacklist)\n\n  }, {\n    key: 'stringify',\n    value: function stringify(blacklist) {\n      var replacer;\n\n      if (Array.isArray(blacklist)) {\n        replacer = function (key, val) {\n          if (blacklist.indexOf(key) !== -1) {\n            return undefined;\n          }\n\n          return val;\n        };\n      } else if (blacklist instanceof RegExp) {\n        replacer = function (key, val) {\n          if (blacklist.test(key)) {\n            return undefined;\n          }\n\n          return val;\n        };\n      }\n\n      return JSON.stringify(this, replacer, 2);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        type: this.type,\n        id: this.id,\n        properties: this.prop(),\n        children: this.children\n      };\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: 'id',\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this.prop('name');\n    }\n\n    // Construct a unique ID from the element's type and ID\n\n  }, {\n    key: 'domID',\n    get: function get() {\n      var id = String(this.id);\n      while (id.length < 4) {\n        id = '0' + id;\n      }\n\n      return this.type + '_' + id;\n    }\n  }], [{\n    key: 'inherit',\n    value: function inherit(source, addSuper) {\n      draft.inherit(this, source, addSuper);\n    }\n  }, {\n    key: 'mixin',\n    value: function mixin(source) {\n      draft.mixin(this, source);\n    }\n\n    // TODO:40 merge require() with mixin()?\n\n  }, {\n    key: 'require',\n    value: function require(source) {\n      if (typeof source == 'string') {\n        this.mixin(draft.mixins[source]);\n      } else if (Array.isArray(source)) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = source[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var mixin = _step2.value;\n\n            this.require(mixin);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return Element;\n})();\n\ndraft.Element.require(['event', 'position', 'rotation']);\n\ndraft.Container = (function (_draft$Element) {\n  _inherits(Container, _draft$Element);\n\n  function Container(name) {\n    _classCallCheck(this, Container);\n\n    // Initialize children array\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Container).call(this, name));\n\n    _this.children = [];\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: 'add',\n    value: function add(child) {\n      // Add a reference to the child's parent and containing doc\n      child.parent = this;\n      child.doc = this.doc || this;\n\n      // Add the child to its type array\n      var type = child.type;\n      (child.doc.elements[type] || (child.doc.elements[type] = [])).push(child);\n      // Set the child's id\n      child._id = child.doc.elements[type].length;\n\n      // Add the child to the end of the children array\n      this.children.push(child);\n\n      // Fire the 'add' event to all listeners\n      this.fire('add', [child]);\n\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child) {\n      this.add(child);\n      return child;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(child) {\n      this.fire('remove', [child]);\n      return this;\n    }\n  }, {\n    key: 'firstChild',\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: 'lastChild',\n    get: function get() {\n      return this.children[this.children.length - 1];\n    }\n  }]);\n\n  return Container;\n})(draft.Element);\n\ndraft.Doc = (function (_draft$Container) {\n  _inherits(Doc, _draft$Container);\n\n  function Doc(name) {\n    _classCallCheck(this, Doc);\n\n    // Initialize elements container\n\n    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Doc).call(this, name));\n\n    _this2.elements = {};\n\n    _this2.prop({\n      system: draft.defaults.system,\n      units: draft.defaults.units\n    });\n    return _this2;\n  }\n\n  return Doc;\n})(draft.Container);\n\ndraft.doc = function doc(name) {\n  var newDoc = new draft.Doc(name);\n\n  (draft.docs || (draft.docs = [])).push(newDoc);\n  newDoc._id = draft.docs.length;\n\n  return newDoc;\n};\n\ndraft.Group = (function (_draft$Container2) {\n  _inherits(Group, _draft$Container2);\n\n  function Group() {\n    _classCallCheck(this, Group);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Group).apply(this, arguments));\n  }\n\n  return Group;\n})(draft.Container);\n\ndraft.Group.require(['system', 'units']);\n\n// TODO: mixin to draft.Group?\ndraft.Container.mixin({\n  group: function group(name) {\n    return this.push(new draft.Group(name)).prop({\n      system: this.prop('system'),\n      units: this.prop('units')\n    });\n  }\n});\n\ndraft.View = (function (_draft$Element2) {\n  _inherits(View, _draft$Element2);\n\n  function View() {\n    _classCallCheck(this, View);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(View).apply(this, arguments));\n  }\n\n  _createClass(View, [{\n    key: 'aspectRatio',\n\n    /* render(renderer) {\n      this['render' + renderer.toUpperCase()]();\n    } */\n\n    get: function get() {\n      var gcd = function gcd(a, b) {\n        return b ? gcd(b, a % b) : a;\n      };\n\n      gcd = gcd(this.width(), this.height());\n      return this.width() / gcd + ':' + this.height() / gcd;\n    }\n  }]);\n\n  return View;\n})(draft.Element);\n\ndraft.View.require('size');\n\ndraft.Group.mixin({\n  view: function view(width, height) {\n    return this.push(new draft.View()).size(width, height);\n  }\n});\n\ndraft.Line = (function (_draft$Element3) {\n  _inherits(Line, _draft$Element3);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Line).apply(this, arguments));\n  }\n\n  _createClass(Line, [{\n    key: 'length',\n    value: function length(_length) {\n      return this.prop('length', unitHack(_length));\n    }\n  }]);\n\n  return Line;\n})(draft.Element);\n\ndraft.Line.require('stroke');\n\ndraft.Group.mixin({\n  line: function line(length) {\n    return this.push(new draft.Line()).length(length);\n  }\n});\n\ndraft.Shape = (function (_draft$Element4) {\n  _inherits(Shape, _draft$Element4);\n\n  function Shape() {\n    _classCallCheck(this, Shape);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Shape).apply(this, arguments));\n  }\n\n  return Shape;\n})(draft.Element);\n\ndraft.Shape.require(['fill', 'stroke', 'size']);\n\ndraft.Rect = (function (_draft$Shape) {\n  _inherits(Rect, _draft$Shape);\n\n  function Rect() {\n    _classCallCheck(this, Rect);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Rect).apply(this, arguments));\n  }\n\n  _createClass(Rect, [{\n    key: 'rekt',\n\n    // Hehehe\n    get: function get() {\n      return Math.floor(Math.random() * 101) + '% rekt';\n    }\n  }]);\n\n  return Rect;\n})(draft.Shape);\n\ndraft.Rect.require(['radius']);\n\ndraft.Group.mixin({\n  rect: function rect() {\n    var width = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\n    var height = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];\n\n    return this.push(new draft.Rect()).size(width, height);\n  }\n});\n\ndraft.Circle = (function (_draft$Shape2) {\n  _inherits(Circle, _draft$Shape2);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Circle).apply(this, arguments));\n  }\n\n  _createClass(Circle, [{\n    key: 'radius',\n    value: function radius(r) {\n      return this.prop('r', unitHack(r));\n    }\n  }]);\n\n  return Circle;\n})(draft.Shape);\n\ndraft.Group.mixin({\n  circle: function circle() {\n    var r = arguments.length <= 0 || arguments[0] === undefined ? 50 : arguments[0];\n\n    return this.push(new draft.Circle()).radius(r);\n  }\n});\nreturn draft;\n}));\n"],"sourceRoot":"/source/"}